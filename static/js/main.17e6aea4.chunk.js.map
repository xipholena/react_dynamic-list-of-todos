{"version":3,"sources":["api.js","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TODOS_URL","USERS_URL","a","fetch","response","json","result","data","getUser","userId","Todo","title","completed","selectUser","type","className","ClassNames","value","onClick","event","TodoList","todos","query","selection","filteredTodos","filter","todo","toLowerCase","includes","map","key","id","CurrentUser","state","person","this","props","then","setState","prevProps","name","email","phone","clearHandler","React","Component","App","selectedUserId","target","handleUserClear","getTodos","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17e6aea4.chunk.js","sourcesContent":["const TODOS_URL = 'https://mate-api.herokuapp.com/todos/';\nconst USERS_URL = 'https://mate-api.herokuapp.com/users/';\n\nexport async function getTodos() {\n  const response = await fetch(`${TODOS_URL}`);\n  const result = await response.json();\n\n  return result.data;\n}\n\nexport async function getUser(userId) {\n  const response = await fetch(`${USERS_URL}${userId}`);\n  const result = await response.json();\n\n  return result.data;\n}\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const Todo = ({ title, completed, selectUser, userId }) => (\n  <>\n    <div>\n      <input type=\"checkbox\" />\n      <p>{title}</p>\n    </div>\n\n    <button\n      className={ClassNames('TodoList__user-button', 'button', {\n        'TodoList__user-button--selected': completed,\n      })}\n      type=\"button\"\n      value={userId}\n      onClick={event => selectUser(event)}\n    >\n      {`User #${userId}`}\n    </button>\n  </>\n);\nTodo.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  selectUser: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = ({ todos, selectUser, query, selection }) => {\n  let filteredTodos = todos\n    .filter(todo => todo.title.toLowerCase()\n      .includes(query.toLowerCase()));\n\n  if (selection === 'Select completed') {\n    filteredTodos = filteredTodos.filter(todo => todo?.completed);\n  } else if (selection === 'Select not completed') {\n    filteredTodos = filteredTodos.filter(todo => !todo?.completed);\n  }\n\n  return (\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {filteredTodos.map(todo => (\n          <li\n            key={todo.id}\n            className={ClassNames('TodoList__item', {\n              'TodoList__item--checked': todo?.completed,\n              'TodoList__item--unchecked': !todo?.completed,\n            })}\n          >\n            <Todo\n              completed={todo?.completed}\n              title={todo.title}\n              userId={todo.userId}\n              selectUser={selectUser}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      completed: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      userId: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  query: PropTypes.string.isRequired,\n  selection: PropTypes.string.isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\n\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    person: null,\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then(person => this.setState({\n        person,\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    getUser(this.props.userId)\n      .then(person => this.setState({\n        person,\n      }));\n  }\n\n  render() {\n    const { person } = this.state;\n\n    return (!person)\n      ? 'No user selected'\n      : (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:\n              {person.id}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{person.name}</h3>\n          <p className=\"CurrentUser__email\">{person.email}</p>\n          <p className=\"CurrentUser__phone\">{person.phone}</p>\n          <button\n            type=\"button\"\n            className=\"CurrentUser__clearBtn\"\n            onClick={this.props.clearHandler}\n          >\n            Clear\n          </button>\n        </div>\n      );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearHandler: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    query: '',\n    selection: 'Select all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({\n        todos: todos.filter(todo => todo.userId !== null),\n      }));\n  }\n\n  selectUser = ({ target }) => {\n    this.setState({ selectedUserId: target.value });\n  }\n\n  handleUserClear = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId, query, selection } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <input\n            className=\"App__searchbar\"\n            type=\"text\"\n            placeholder=\"Type a todo here...\"\n            value={query}\n            onChange={(event) => {\n              this.setState({ query: event.target.value });\n            }}\n          />\n          <select\n            onChange={event => this.setState({\n              selection: event.target.value,\n            })\n            }\n            className=\"App__select\"\n          >\n            <option value=\"Select all\">\n              Select all\n            </option>\n            <option value=\"Select completed\">\n              Select completed\n            </option>\n            <option value=\"Select not completed\">\n              Select not completed\n            </option>\n          </select>\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n            query={query}\n            selection={selection}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearHandler={this.handleUserClear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}